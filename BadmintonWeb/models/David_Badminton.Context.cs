//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BadmintonWeb.models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class David_BadmintonEntities : DbContext
    {
        public David_BadmintonEntities()
            : base("name=David_BadmintonEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Facilitys> Facilitys { get; set; }
        public virtual DbSet<LearningProcess> LearningProcess { get; set; }
        public virtual DbSet<ModuleAccess> ModuleAccess { get; set; }
        public virtual DbSet<TypeUsers> TypeUsers { get; set; }
        public virtual DbSet<UserModules> UserModules { get; set; }
        public virtual DbSet<Time> Time { get; set; }
        public virtual DbSet<RollCalls> RollCalls { get; set; }
        public virtual DbSet<Coachs> Coachs { get; set; }
        public virtual DbSet<Students> Students { get; set; }
    
        public virtual ObjectResult<getModuleAccessUser_Result> getModuleAccessUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModuleAccessUser_Result>("getModuleAccessUser");
        }
    
        public virtual ObjectResult<getStudentByCoachID_Result> getStudentByCoachID(Nullable<int> facilityid, Nullable<int> coachid, Nullable<int> timeid)
        {
            var facilityidParameter = facilityid.HasValue ?
                new ObjectParameter("facilityid", facilityid) :
                new ObjectParameter("facilityid", typeof(int));
    
            var coachidParameter = coachid.HasValue ?
                new ObjectParameter("coachid", coachid) :
                new ObjectParameter("coachid", typeof(int));
    
            var timeidParameter = timeid.HasValue ?
                new ObjectParameter("timeid", timeid) :
                new ObjectParameter("timeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentByCoachID_Result>("getStudentByCoachID", facilityidParameter, coachidParameter, timeidParameter);
        }
    
        public virtual ObjectResult<getCheckedStudentsByDateAndCoach_Result> getCheckedStudentsByDateAndCoach(Nullable<System.DateTime> dateSelected, Nullable<int> coachID)
        {
            var dateSelectedParameter = dateSelected.HasValue ?
                new ObjectParameter("dateSelected", dateSelected) :
                new ObjectParameter("dateSelected", typeof(System.DateTime));
    
            var coachIDParameter = coachID.HasValue ?
                new ObjectParameter("coachID", coachID) :
                new ObjectParameter("coachID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCheckedStudentsByDateAndCoach_Result>("getCheckedStudentsByDateAndCoach", dateSelectedParameter, coachIDParameter);
        }
    }
}
